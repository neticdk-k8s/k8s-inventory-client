---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-inventory-client
  namespace: netic-metadata-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-inventory-client
  labels:
    app.kubernetes.io/name: k8s-inventory-client
    app.kubernetes.io/instance: k8s-inventory-client
    app.kubernetes.io/managed-by: kustomize
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs:
      - get
      - list
      - watch
      - head
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-inventory-client
  labels:
    app.kubernetes.io/name: k8s-inventory-client
    app.kubernetes.io/instance: k8s-inventory-client
    app.kubernetes.io/managed-by: kustomize
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-inventory-client
subjects:
  - kind: ServiceAccount
    namespace: netic-metadata-system
    name: k8s-inventory-client
---
apiVersion: v1
kind: Service
metadata:
  name: metadata
  namespace: netic-metadata-system
  labels:
    app.kubernetes.io/name: k8s-inventory-client
    app.kubernetes.io/instance: k8s-inventory-client
    app.kubernetes.io/managed-by: kustomize
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: meta
  selector:
    app.kubernetes.io/name: k8s-inventory-client
    app.kubernetes.io/instance: k8s-inventory-client
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-inventory-metadata
  namespace: netic-metadata-system
spec:
  ingress:
    - from:
        - namespaceSelector: {}
      ports:
        - port: 8088
          protocol: TCP
  podSelector:
    matchLabels:
      app.kubernetes.io/name: k8s-inventory-client
  policyTypes:
    - Ingress
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-inventory-client
  namespace: netic-metadata-system
  labels:
    app.kubernetes.io/name: k8s-inventory-client
    app.kubernetes.io/instance: k8s-inventory-client
    app.kubernetes.io/version: 0.0.0
    app.kubernetes.io/managed-by: kustomize
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-inventory-client
      app.kubernetes.io/instance: k8s-inventory-client
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s-inventory-client
        app.kubernetes.io/instance: k8s-inventory-client
        app.kubernetes.io/version: 0.0.0
        app.kubernetes.io/managed-by: kustomize
    spec:
      serviceAccountName: k8s-inventory-client
      containers:
        - image: ghcr.io/neticdk-k8s/k8s-inventory-client:latest
          imagePullPolicy: Always
          name: client
          ports:
            - containerPort: 8087
              name: http
            - containerPort: 8088
              name: meta
          resources:
            requests:
              cpu: "10m"
              memory: "160Mi"
            limits:
              cpu: "50m"
              memory: "256Mi"
          env:
            - name: LOG_LEVEL
              value: debug
            - name: COLLECT_INTERVAL
              value: 30m
          volumeMounts:
            - name: certificate
              mountPath: /etc/certificates
              readOnly: true
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - all
      priorityClassName: "secure-cloud-stack-technical-management-critical"
      volumes:
        - name: certificate
          secret:
            secretName: k8s-inventory-client-certificate
